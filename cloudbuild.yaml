steps:
  # Build the container image with multiple tags
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '-t', 'gcr.io/$PROJECT_ID/petclinic:$COMMIT_SHA',
      '-t', 'gcr.io/$PROJECT_ID/petclinic:latest',
      '.'
    ]
    id: 'build'

  # Push both tags to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/petclinic:$COMMIT_SHA']
    id: 'push-sha'

  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/petclinic:latest']
    id: 'push-latest'

  # Deploy container image to Cloud Run (Primary Region)
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'petclinic-${_ENVIRONMENT}-primary'
      - '--image'
      - 'gcr.io/$PROJECT_ID/petclinic:latest'
      - '--region'
      - '${_PRIMARY_REGION}'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--min-instances'
      - '${_MIN_INSTANCES}'
      - '--max-instances'
      - '${_MAX_INSTANCES}'
      - '--cpu'
      - '4'
      - '--memory'
      - '4Gi'
      - '--no-cpu-throttling'
      - '--port'
      - '8080'
      - '--concurrency'
      - '80'
      - '--set-env-vars'
      - 'SPRING_PROFILES_ACTIVE=postgres'
      - '--set-secrets'
      - 'POSTGRES_HOST=petclinic-${_ENVIRONMENT}-db-host:latest'
      - '--set-secrets'
      - 'POSTGRES_PORT=petclinic-${_ENVIRONMENT}-db-port:latest'
      - '--set-secrets'
      - 'POSTGRES_DB=petclinic-${_ENVIRONMENT}-db-database:latest'
      - '--set-secrets'
      - 'POSTGRES_USER=petclinic-${_ENVIRONMENT}-db-user:latest'
      - '--set-secrets'
      - 'POSTGRES_PASSWORD=petclinic-${_ENVIRONMENT}-db-password:latest'

  # Deploy container image to Cloud Run (Secondary Region)
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'petclinic-${_ENVIRONMENT}-secondary'
      - '--image'
      - 'gcr.io/$PROJECT_ID/petclinic:latest'
      - '--region'
      - '${_SECONDARY_REGION}'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--min-instances'
      - '${_MIN_INSTANCES}'
      - '--max-instances'
      - '${_MAX_INSTANCES}'
      - '--cpu'
      - '4'
      - '--memory'
      - '4Gi'
      - '--no-cpu-throttling'
      - '--port'
      - '8080'
      - '--concurrency'
      - '80'
      - '--set-env-vars'
      - 'SPRING_PROFILES_ACTIVE=postgres'
      - '--set-secrets'
      - 'POSTGRES_HOST=petclinic-${_ENVIRONMENT}-db-host:latest'
      - '--set-secrets'
      - 'POSTGRES_PORT=petclinic-${_ENVIRONMENT}-db-port:latest'
      - '--set-secrets'
      - 'POSTGRES_DB=petclinic-${_ENVIRONMENT}-db-database:latest'
      - '--set-secrets'
      - 'POSTGRES_USER=petclinic-${_ENVIRONMENT}-db-user:latest'
      - '--set-secrets'
      - 'POSTGRES_PASSWORD=petclinic-${_ENVIRONMENT}-db-password:latest'


substitutions:
  _ENVIRONMENT: prod
  _PRIMARY_REGION: europe-west4
  _SECONDARY_REGION: europe-west3
  _MIN_INSTANCES: "10"    # Warm pool for quick response
  _MAX_INSTANCES: "400"   # Handle peak load with buffer

options:
  logging: CLOUD_LOGGING_ONLY

images:
  - 'gcr.io/$PROJECT_ID/petclinic:$COMMIT_SHA'
  - 'gcr.io/$PROJECT_ID/petclinic:latest'
